#This script calculates the correlation coefficients pairwise for the 40 non-coevolving proteins 
#correlation coefficients for MARCO-TLR2, MARCO-CD14, and TLR2-CD14 are calculated separately
#plots correlation coefficients 


library(MASS)
library(pracma)
library(ade4)
library(vegan)
library(ape)

n <- 40 #number of trees
m <- 5 #number of tips

nameData <- c("Acet","Adren","Alb", "Hemo","Epid","Estro", "Ins" ,"CFTR", "Cad5", "cystat", "Creatine","PDIA3", 
              "GRSP1", "HYP1", "adpr4", "PFK", "Coll3" , "PTP" , "NOB1", "SRPRA" , "CALR" , "ACON" , "ADHY3" , "cyto" , "myo" , "FRS2",
              "lamin" , "CLK3" , "ruvb2" , "PWP1" , "HCFC1", "AT4B" , "CCK" , "NRAP" , "PA2G4" , "RRP12" , "TAS1", "epoxide" , "STOM", "BEST") 


tree_1<-read.tree("4_protein.tree")
X<-cophenetic.phylo(tree_1)

M<-m*(m-1)/2
listX <- rep(0,M)
edgeList <- rep(0,n)
BootEdge <- edgeList

res1<-rep(0,n*(n-1)/2)
res <- data.frame(Protein1=character(),Protein2=character(), stringsAsFactors=FALSE)
res2D <- matrix(0, n, n, dimnames = list(nameData, nameData)) 
colnames(res) <- c("Protein1", "Protein2")

treeDat <- matrix(0, n, M) 

i<-1
j<-1
k<-1
l<-1

counter1<-1
counter2<-1

str <- "protein.tree"
name <- str

for(i in 1:n){
  
  name <- paste(i,str,sep ="_")
  tree_1 <- read.tree(name)
  plot(tree_1)
  X <- cophenetic.phylo(tree_1)
  print(X)
  
  counter2 <- 1
  
  for(k in 1:(m-1)){
    for(l in (k+1):m){
      listX[counter2]<-X[k,l]
      counter2<-counter2+1
    }    
  }
  
  treeDat[i,1:M]=listX
}



print(treeDat)

for(j in 1:(n-1)){
  for(k in (j+1):n){      
    corr<-cor(treeDat[j,1:M],treeDat[k,1:M])
    res[counter1,1]<-nameData[j]
    res[counter1,2]<-nameData[k]
    res1[counter1]<-corr
    #res2D[i,j]<-corr
    #res2D[j,i]<-corr
    counter1<-counter1+1    
  }
}



set.seed(5023)

for(i in 1:M){
  
  edgeList <- treeDat[1:n,i]
  BootEdge <- sample(edgeList)
  
  treeDat[1:n,i] <- BootEdge
  
  for(j in 1:(n-1)){
    for(k in (j+1):n){      
      corr<-cor(treeDat[j,1:M],treeDat[k,1:M])
      res[counter1,1]<-nameData[j]
      res[counter1,2]<-nameData[k]
      res1[counter1]<-corr
      #res2D[i,j]<-corr
      #res2D[j,i]<-corr
      counter1<-counter1+1    
    }
  }
}

res[, "cor"]<- res1
print(res)
#write.csv(res,file="Result.csv")
#write.csv(res2D,file="Result2D.csv")

quan<- res[,3]
cut <- quantile (quan, 0.95)


###############################################################
# MARCO/ TLR2/ CD14 comparisons 

q <- 3 #number of trees
p <- 5 #number of tips

nameData2 <- c("Marco" , "TLR2" , "CD14")

tree_3<-read.tree("1_protein.tree")
X<-cophenetic.phylo(tree_3)

M<-p*(p-1)/2
listX <- rep(0,M)
edgeList <- rep(0,q)
BootEdge <- edgeList

res_test<-rep(0,q*(q-1)/2)
res3 <- data.frame(Protein1=character(),Protein2=character(), stringsAsFactors=FALSE)
res3D <- matrix(0, q, q, dimnames = list(nameData2, nameData2)) 
colnames(res3) <- c("Protein1", "Protein2")

treeDat2 <- matrix(0, q, M) 

i<-1
j<-1
k<-1
l<-1

counter1<-1
counter2<-1

str <- "protein.tree"
name <- str

for(i in 1:q){
  
  name <- paste(i,str,sep ="_")
  tree_3 <- read.tree(name)
  plot(tree_3)
  X <- cophenetic.phylo(tree_3)
  print(X)
  
  counter2 <- 1
  
  for(k in 1:(p-1)){
    for(l in (k+1):p){
      listX[counter2]<-X[k,l]
      counter2<-counter2+1
    }    
  }
  
  treeDat2[i,1:M]=listX
}



print(treeDat2)

for(j in 1:(q-1)){
  for(k in (j+1):q){      
    corr<-cor(treeDat2[j,1:M],treeDat2[k,1:M])
    res3[counter1,1]<-nameData2[j]
    res3[counter1,2]<-nameData2[k]
    res_test[counter1]<-corr
    counter1<-counter1+1    
  }
}



set.seed(3)

for(i in 1:M){
  
  edgeList <- treeDat2[1:p,i]
  BootEdge <- sample(edgeList)
  
  treeDat2[1:p,i] <- BootEdge
  
  for(j in 1:(p-1)){
    for(k in (j+1):p){      
      corr<-cor(treeDat2[j,1:M],treeDat2[k,1:M])
      res3[counter1,1]<-nameData2[j]
      res3[counter1,2]<-nameData2[k]
      res_test[counter1]<-corr
      counter1<-counter1+1    
    }
  }
}

res3[, "cor"]<- res_test
print(res3)
#write.csv(res,file="Result.csv")
#write.csv(res2D,file="Result2D.csv")


hist(res[,"cor"],breaks=40,col="gray",las=1,main="", xlab="Correlation", ylab= "Frequency")
points(res3[1,3], 300, col="blue" , pch=19)  #showing the Correlation of Marco and tlr
points(res3[2,3], 300, col="green" , pch=19 )   #CD14 and TLR2 correlation
points(res3[3,3], 300, col="purple" , pch=19)   #CD14 and MARCO correlation
abline(v=cut, col="red")   #95 percent quantile cutoff
#qqnorm(res3[,"cor"])
#qqline(res3[,"cor"])

mean(res3[1,3]<res[,3]) #MARCO + TLR2
#0.05104895
mean(res3[2,3]<res[,3]) #TLR2 + CD14 
#0.0.03543124
mean(res3[3,3]<res[,3]) #CD14 + MARCO
#0.0.004662005

t<- res[,3] > 0.9 
  
which(t==TRUE)

y <- res[c(t),]

f<- res[,3] < 0.00000000000 

which(t==FALSE)

z <- res[c(f),]


write.table(y, file = "correlations_90")
write.table(z, file = "correlations0")

